name: Procesar Datos y Entrenar Modelo AutoML

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Permite ejecuci√≥n manual

jobs:
  build-and-train:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Optimizaci√≥n: Cache de dependencias de pip para acelerar futuras ejecuciones
      - name: Cache de dependencias de Pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip # La carpeta donde pip guarda los paquetes descargados
          # Crea una "llave" √∫nica para el cache. Si requirements.txt cambia, la llave cambia y el cache se invalida.
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # --- ETAPA DE PROCESAMIENTO ---
      - name: 1. Ejecutar el procesador de NLP
        run: python nlp_processor.py

      # --- ETAPA DE ENTRENAMIENTO ---
      - name: 2. Ejecutar el entrenador de AutoML
        run: python python_train.py

      # --- ETAPA DE GUARDADO DE ARTEFACTOS ---
      - name: 3. Hacer commit y push del modelo y artefactos
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          git add data/processed_reddit_data.csv
          git add data/topic_keywords.csv
          git add models/sentiment_model_v2.pkl
          git add "Feature Importance.png"
          
          # Solo hacer commit si se detectan cambios en los archivos
          git diff --staged --quiet || git commit -m "ü§ñ AutoML: Modelo y artefactos actualizados"
          git push